```plantuml
@startuml Shop Lite Class Diagram

skinparam packageStyle rectangle
skinparam classFontName Arial
skinparam classFontSize 12
skinparam classAttributeFontSize 10

enum ERole {
  ROLE_USER
  ROLE_ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}

class User {
  -id: Long
  -email: String
  -password: String
  -firstName: String
  -lastName: String
  -roles: Set<Role>
  -createdAt: LocalDateTime
  -updatedAt: LocalDateTime
  +onCreate(): void
  +onUpdate(): void
}

class Role {
  -id: Integer
  -name: ERole
}

class Product {
  -id: Long
  -name: String
  -description: String
  -price: BigDecimal
  -imageUrl: String
  -stockQuantity: Integer
  -category: Category
  -createdAt: LocalDateTime
  -updatedAt: LocalDateTime
  +onCreate(): void
  +onUpdate(): void
}

class Category {
  -id: Long
  -name: String
  -description: String
  -products: List<Product>
}

class Cart {
  -id: Long
  -user: User
  -totalAmount: BigDecimal
  -items: List<CartItem>
  -createdAt: LocalDateTime
  -updatedAt: LocalDateTime
  +onCreate(): void
  +onUpdate(): void
  +calculateTotalAmount(): void
}

class CartItem {
  -id: Long
  -cart: Cart
  -product: Product
  -quantity: Integer
}

class Order {
  -id: Long
  -user: User
  -status: OrderStatus
  -totalAmount: BigDecimal
  -items: List<OrderItem>
  -shippingAddress: String
  -paymentMethod: String
  -createdAt: LocalDateTime
  -updatedAt: LocalDateTime
  +onCreate(): void
  +onUpdate(): void
}

class OrderItem {
  -id: Long
  -order: Order
  -product: Product
  -quantity: Integer
  -priceAtPurchase: BigDecimal
}

User "1" -- "0..*" Role : has >
User "1" -- "0..1" Cart : has >
User "1" -- "0..*" Order : places >

Category "1" -- "0..*" Product : contains >

Cart "1" -- "0..*" CartItem : contains >
Product "1" -- "0..*" CartItem : referenced in >

Order "1" -- "0..*" OrderItem : contains >
Product "1" -- "0..*" OrderItem : referenced in >

@enduml
```